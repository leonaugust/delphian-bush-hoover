server.port=8082
#spring.profiles.active=test,mock-coin-api,mock-crypto-panic
spring.profiles.active=test,mock-coin-api,mock-crypto-panic,kafka

api.connection-timeout=5000

# crypto stats
coin-api.base-url=https://rest.coinapi.io
coin-api.api-key=${COIN_API_KEY:}
coin-api.rates-endpoint=/v1/exchangerate

# crypto news
crypto-panic-url=https://cryptopanic.com
crypto-panic-posts-endpoint=/api/v1/posts/
crypto-panic-key=${CRYPTO_PANIC_KEY:}

predictor.kafka.stats-topic=crypto-stats
predictor.kafka.news-topic=crypto-news
predictor.kafka.predicts-topic=crypto-predicts
predictor.kafka.partitions=1
predictor.kafka.replicas=1
predictor.kafka-topic-by-type={\
  'CRYPTO_PANIC_NEWS': '${predictor.kafka.news-topic}', \
  'COIN_API_STATS': '${predictor.kafka.stats-topic}' \
  }

spring.kafka.bootstrap-servers=localhost:29092

### Kafka producer ###
spring.kafka.producer.retries=2147483647
spring.kafka.producer.acks=all
spring.kafka.producer.properties.enable.idempotence=true
spring.kafka.producer.properties.max.in.flight.requests.per.connection=5

# improve throughput by adding compression and latency
spring.kafka.producer.compression-type=snappy
spring.kafka.producer.properties.linger.ms=20

# 32 * 1024(32 KB batch size)
spring.kafka.producer.batch-size=32768

###################

### Kafka Consumer ###

spring.kafka.consumer.group-id=crypto-group-id

###################

spring.jackson.mapper.USE_BASE_TYPE_AS_DEFAULT_IMPL=true

###################

spring.data.mongodb.host=localhost
spring.data.mongodb.port=27017
spring.data.mongodb.username=root
spring.data.mongodb.password=root
spring.data.mongodb.database=crypto_db
spring.data.mongodb.authentication-database=admin